/**
 * A 16-bit counter with increment, load, and reset modes.
 * if      (inc(t))   out(t+1) = out(t) + 1
 * else if (load(t))  out(t+1) = in(t)
 * else if (reset(t)) out(t+1) = 0
 * else               out(t+1) = out(t)
 *
 * To select a mode, assert the relevant control bit,
 * and de-assert the other two bits. 
 */
CHIP PC {
    IN in[16],inc, load, reset;
    OUT out[16];
    
    PARTS:
    Inc16(in=registerOut, out=incrementedCurrentValue);

    Mux16(a=registerOut, b=incrementedCurrentValue, sel=inc, out=incOut);
    Mux16(a=incOut, b=in, sel=load, out=loadOut);
    Mux16(a=loadOut, b[0..15]=false, sel=reset, out=nextValue);

    Or(a=inc, b=load, out=incOrLoad);
    Or(a=incOrLoad, b=reset, out=incOrLoadOrReset);

    Register(in=nextValue, load=incOrLoadOrReset, out=registerOut);

    Or16(a[0..15]=false, b=registerOut, out=out);
}
